/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyect;

import com.itextpdf.text.Chunk;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Point;
import java.awt.RenderingHints;
import java.awt.Shape;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.awt.geom.AffineTransform;
import java.awt.geom.Rectangle2D;
import javax.swing.JColorChooser;
import java.awt.geom.RoundRectangle2D;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.util.ArrayList;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import static javafx.scene.input.KeyCode.O;
import javax.imageio.ImageIO;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import static javax.swing.SwingConstants.CENTER;
import javax.swing.border.Border;
import javax.swing.filechooser.FileNameExtensionFilter;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Image;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Composite;
import java.awt.image.ImageProducer;
import java.io.EOFException;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.print.Doc;
import javax.print.DocFlavor;
import javax.print.DocPrintJob;
import javax.print.PrintException;
import javax.print.PrintService;
import javax.print.PrintServiceLookup;
import javax.print.SimpleDoc;
//librerias ajenas a itext
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.filechooser.FileNameExtensionFilter;
//import javax.swing.text.Document;
import sun.applet.Main;

/**
 *
 * @author Alex Ordonez
 */
public class proyect extends javax.swing.JFrame {

    /**
     * Creates new form proyect
     */
    public proyect() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        pp_menu = new javax.swing.JPopupMenu();
        Color_cambio = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        j_elegir = new javax.swing.JDialog();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        pp_menuo = new javax.swing.JPopupMenu();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jFrame1 = new javax.swing.JFrame();
        jToolBar3 = new javax.swing.JToolBar();
        jButton3 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jDialog1 = new javax.swing.JDialog();
        cb_uml = new javax.swing.JComboBox<>();
        jButton5 = new javax.swing.JButton();
        jDialog2 = new javax.swing.JDialog();
        jToolBar1 = new javax.swing.JToolBar();
        white = new javax.swing.JToggleButton();
        yellow = new javax.swing.JToggleButton();
        azul = new javax.swing.JToggleButton();
        cafe = new javax.swing.JToggleButton();
        morado = new javax.swing.JToggleButton();
        gris = new javax.swing.JToggleButton();
        verde = new javax.swing.JToggleButton();
        red = new javax.swing.JToggleButton();
        jPanel1 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jToolBar2 = new javax.swing.JToolBar();
        Inicio = new javax.swing.JToggleButton();
        Proceso = new javax.swing.JToggleButton();
        Sub = new javax.swing.JToggleButton();
        salida = new javax.swing.JToggleButton();
        Decicion = new javax.swing.JToggleButton();
        lectura = new javax.swing.JToggleButton();
        defaul = new javax.swing.JToggleButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();

        Color_cambio.setText("Cambio de color");
        Color_cambio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Color_cambioActionPerformed(evt);
            }
        });
        pp_menu.add(Color_cambio);

        jMenuItem1.setText("Ingresar Texto");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        pp_menu.add(jMenuItem1);

        jMenuItem2.setText("Conectar");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        pp_menu.add(jMenuItem2);

        jMenuItem3.setText("Eliminar");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        pp_menu.add(jMenuItem3);

        jMenuItem4.setText("cambiar color/font");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        pp_menu.add(jMenuItem4);

        jButton1.setText("Conectar");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout j_elegirLayout = new javax.swing.GroupLayout(j_elegir.getContentPane());
        j_elegir.getContentPane().setLayout(j_elegirLayout);
        j_elegirLayout.setHorizontalGroup(
            j_elegirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(j_elegirLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, j_elegirLayout.createSequentialGroup()
                .addContainerGap(150, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(61, 61, 61))
        );
        j_elegirLayout.setVerticalGroup(
            j_elegirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(j_elegirLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 149, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(88, 88, 88))
        );

        jMenuItem5.setText("Agregar Titulo");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        pp_menuo.add(jMenuItem5);

        jMenuItem6.setText("Agregar Atributo");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        pp_menuo.add(jMenuItem6);

        jMenuItem7.setText("Hacer Abstracta");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        pp_menuo.add(jMenuItem7);

        jMenuItem8.setText("Hereredar");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        pp_menuo.add(jMenuItem8);

        jToolBar3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jToolBar3.setRollover(true);

        jButton3.setText("Agregar Clase");
        jButton3.setFocusable(false);
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });
        jToolBar3.add(jButton3);

        jButton11.setText("Generar");
        jButton11.setFocusable(false);
        jButton11.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton11.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton11MouseClicked(evt);
            }
        });
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        jToolBar3.add(jButton11);

        jButton12.setText("Volver");
        jButton12.setFocusable(false);
        jButton12.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton12.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton12MouseClicked(evt);
            }
        });
        jToolBar3.add(jButton12);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 977, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jToolBar3, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jFrame1Layout.createSequentialGroup()
                        .addComponent(jToolBar3, javax.swing.GroupLayout.PREFERRED_SIZE, 687, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 8, Short.MAX_VALUE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jButton5.setText("Heredar");
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton5MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(cb_uml, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDialog1Layout.createSequentialGroup()
                .addContainerGap(325, Short.MAX_VALUE)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(125, 125, 125))
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(cb_uml, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 170, Short.MAX_VALUE)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(141, 141, 141))
        );

        javax.swing.GroupLayout jDialog2Layout = new javax.swing.GroupLayout(jDialog2.getContentPane());
        jDialog2.getContentPane().setLayout(jDialog2Layout);
        jDialog2Layout.setHorizontalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1301, Short.MAX_VALUE)
        );
        jDialog2Layout.setVerticalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 656, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jToolBar1.setBackground(new java.awt.Color(255, 204, 204));
        jToolBar1.setRollover(true);

        white.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(white);
        white.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        white.setForeground(new java.awt.Color(255, 255, 255));
        white.setText("white");
        white.setFocusable(false);
        white.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        white.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(white);

        buttonGroup1.add(yellow);
        yellow.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        yellow.setForeground(new java.awt.Color(255, 255, 51));
        yellow.setText("yellow");
        yellow.setFocusable(false);
        yellow.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        yellow.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(yellow);

        buttonGroup1.add(azul);
        azul.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        azul.setForeground(new java.awt.Color(51, 51, 255));
        azul.setText("Blue");
        azul.setFocusable(false);
        azul.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        azul.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(azul);

        buttonGroup1.add(cafe);
        cafe.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cafe.setForeground(new java.awt.Color(0, 153, 102));
        cafe.setText("brown");
        cafe.setFocusable(false);
        cafe.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cafe.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(cafe);

        buttonGroup1.add(morado);
        morado.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        morado.setForeground(new java.awt.Color(255, 0, 204));
        morado.setText("purple");
        morado.setFocusable(false);
        morado.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        morado.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(morado);

        buttonGroup1.add(gris);
        gris.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        gris.setForeground(new java.awt.Color(153, 153, 153));
        gris.setText("gray");
        gris.setFocusable(false);
        gris.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        gris.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(gris);

        buttonGroup1.add(verde);
        verde.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        verde.setForeground(new java.awt.Color(0, 204, 51));
        verde.setText("green");
        verde.setFocusable(false);
        verde.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        verde.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(verde);

        buttonGroup1.add(red);
        red.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        red.setForeground(new java.awt.Color(255, 0, 0));
        red.setText("red");
        red.setFocusable(false);
        red.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        red.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(red);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel1MouseDragged(evt);
            }
        });
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel1MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel1MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jPanel1MouseReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1132, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 813, Short.MAX_VALUE)
        );

        jButton2.setText("Generar");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        jToolBar2.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jToolBar2.setRollover(true);

        buttonGroup2.add(Inicio);
        Inicio.setIcon(new javax.swing.ImageIcon("C:\\Users\\Alex Ordonez\\Desktop\\Project\\pic\\f1.png")); // NOI18N
        Inicio.setText("Inicio/Final");
        Inicio.setFocusable(false);
        Inicio.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Inicio.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar2.add(Inicio);

        buttonGroup2.add(Proceso);
        Proceso.setIcon(new javax.swing.ImageIcon("C:\\Users\\Alex Ordonez\\Desktop\\Project\\pic\\p1.png")); // NOI18N
        Proceso.setText("Proceso");
        Proceso.setFocusable(false);
        Proceso.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Proceso.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar2.add(Proceso);

        buttonGroup2.add(Sub);
        Sub.setIcon(new javax.swing.ImageIcon("C:\\Users\\Alex Ordonez\\Desktop\\Project\\pic\\sp1.png")); // NOI18N
        Sub.setText("SubProceso");
        Sub.setFocusable(false);
        Sub.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Sub.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar2.add(Sub);

        buttonGroup2.add(salida);
        salida.setIcon(new javax.swing.ImageIcon("C:\\Users\\Alex Ordonez\\Desktop\\Project\\pic\\s1.png")); // NOI18N
        salida.setText("Salida");
        salida.setFocusable(false);
        salida.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        salida.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar2.add(salida);

        buttonGroup2.add(Decicion);
        Decicion.setIcon(new javax.swing.ImageIcon("C:\\Users\\Alex Ordonez\\Desktop\\Project\\pic\\i1.png")); // NOI18N
        Decicion.setText("Decicion");
        Decicion.setFocusable(false);
        Decicion.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Decicion.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar2.add(Decicion);

        buttonGroup2.add(lectura);
        lectura.setIcon(new javax.swing.ImageIcon("C:\\Users\\Alex Ordonez\\Desktop\\Project\\pic\\d1.png")); // NOI18N
        lectura.setText("Lectura");
        lectura.setFocusable(false);
        lectura.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lectura.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar2.add(lectura);

        buttonGroup2.add(defaul);
        defaul.setFocusable(false);
        defaul.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        defaul.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar2.add(defaul);

        jButton6.setText("PDF");
        jButton6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton6MouseClicked(evt);
            }
        });

        jButton7.setText("Imagen");
        jButton7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton7MouseClicked(evt);
            }
        });

        jButton8.setText("Guardar");
        jButton8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton8MouseClicked(evt);
            }
        });

        jButton9.setText("Cargar");
        jButton9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton9MouseClicked(evt);
            }
        });

        jButton4.setText("Ir A UML");
        jButton4.setFocusable(false);
        jButton4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });

        jButton10.setText("Imprimir");
        jButton10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton10MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 1500, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jToolBar2, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
                            .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jToolBar2, javax.swing.GroupLayout.PREFERRED_SIZE, 714, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(118, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton4)
                        .addGap(64, 64, 64))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseClicked
        x = evt.getX();
        y = evt.getY();
        fx = 163;
        fy = 70;
        boolean a = false;
        JLabel n = new JLabel();
        if (Proceso.isSelected()) {
            n.setIcon(new ImageIcon("pic/p" + color() + ".png"));
            n.setBounds(x, y, fx, fy);
            for (Figuras f : figuras) {
                if (n.getBounds().intersects(f.getR().getBounds())) {
                    System.out.println("kirby");
                    a = true;
                }
            }
            if (a == false) {
                DefaultComboBoxModel m = (DefaultComboBoxModel) jComboBox1.getModel();
                m.addElement(new Rectangulo(n, color(), null));
                jComboBox1.setModel(m);
                figuras.add(new Rectangulo(n, color(), null));
                n.setVisible(true);
                jPanel1.add(n);
                Proceso.setSelected(false);
            }
        }
        if (Inicio.isSelected()) {
            n.setBounds(x, y, fx, fy);
            for (Figuras f : figuras) {
                if (n.getBounds().intersects(f.getR().getBounds())) {
                    a = true;
                }
            }
            if (a == false) {
                DefaultComboBoxModel m = (DefaultComboBoxModel) jComboBox1.getModel();
                m.addElement(new RoundRect(n, color(), null));
                jComboBox1.setModel(m);
                figuras.add(new RoundRect(n, color(), null));
                n.setIcon(new ImageIcon("pic/f" + color() + ".png"));
                n.setVisible(true);
                if (band != 0) {
                    figuras.get(figuras.size() - 1).setPadre_val(false);
                }
                band++;
                jPanel1.add(n);
                Inicio.setSelected(false);
            }
        }
        if (Sub.isSelected()) {
            n.setBounds(x, y, fx, fy);
            for (Figuras f : figuras) {
                if (n.getBounds().intersects(f.getR().getBounds())) {
                    a = true;
                }
            }
            if (a == false) {
                DefaultComboBoxModel m = (DefaultComboBoxModel) jComboBox1.getModel();
                m.addElement(new SubProceso(n, color(), null));
                jComboBox1.setModel(m);
                figuras.add(new SubProceso(n, color(), null));
                n.setIcon(new ImageIcon("pic/sp" + color() + ".png"));
                n.setVisible(true);
                jPanel1.add(n);
                Sub.setSelected(false);
            }
        }
        if (Decicion.isSelected()) {
            fy = 126;
            fx = 126;
            n.setBounds(x, y, fx, fy);
            for (Figuras f : figuras) {
                if (n.getBounds().intersects(f.getR().getBounds())) {
                    a = true;
                }
            }
            if (a == false) {
                DefaultComboBoxModel m = (DefaultComboBoxModel) jComboBox1.getModel();
                m.addElement(new Decicion(n, color(), null));
                jComboBox1.setModel(m);
                figuras.add(new Decicion(n, color(), null));
                n.setIcon(new ImageIcon("pic/i" + color() + ".png"));
                n.setVisible(true);
                jPanel1.add(n);
                Decicion.setSelected(false);
            }
        }
        if (lectura.isSelected()) {
            fx = 105;
            n.setBounds(x, y, fx, fy);
            for (Figuras f : figuras) {
                if (n.getBounds().intersects(f.getR().getBounds())) {
                    a = true;
                }
            }
            if (a == false) {
                DefaultComboBoxModel m = (DefaultComboBoxModel) jComboBox1.getModel();
                m.addElement(new Data(n, color(), null));
                jComboBox1.setModel(m);
                figuras.add(new Data(n, color(), null));
                n.setIcon(new ImageIcon("pic/d" + color() + ".png"));
                n.setVisible(true);
                jPanel1.add(n);
                lectura.setSelected(false);
            }
        }
        if (salida.isSelected()) {
            fx = 130;
            n.setBounds(x, y, fx, fy);
            for (Figuras f : figuras) {
                if (n.getBounds().intersects(f.getR().getBounds())) {
                    a = true;
                }
            }
            if (a == false) {
                figuras.add(new Salida(n, color(), null));
                DefaultComboBoxModel m = (DefaultComboBoxModel) jComboBox1.getModel();
                m.addElement(new Salida(n, color(), null));
                jComboBox1.setModel(m);
                n.setIcon(new ImageIcon("pic/s" + color() + ".png"));
                n.setVisible(true);
                jPanel1.add(n);
                salida.setSelected(false);
            }
        }
        defaul.setSelected(true);
        if (a == false) {
            n.setLayout(null);
            n.setIconTextGap(0);
            n.addMouseListener(new MouseListener() {
                @Override
                public void mouseClicked(MouseEvent e) {
                    if (e.isMetaDown()) {
                        pp_menu.show(e.getComponent(), e.getX(), e.getY());
                        figura_actual = buscarfig((JLabel) e.getComponent());
                        repaint();
                        Graphics2D g = (Graphics2D) jPanel1.getGraphics();
                        draw(g);
                        pintar(figura_actual.getColor(), figura_actual);
                    }
                }

                @Override
                public void mousePressed(MouseEvent e) {
                    xo = e.getX();
                    yo = e.getY();
                    Graphics2D g = (Graphics2D) jPanel1.getGraphics();
                    for (Figuras[] c : conexiones) {
                        g.drawLine(c[0].getR().getX() + c[0].getR().getWidth() / 2, c[0].getR().getY() + c[0].getR().getHeight() / 2, c[1].getR().getX() + c[1].getR().getWidth() / 2, c[1].getR().getY() + c[1].getR().getHeight() / 2);
                    }
                }

                @Override
                public void mouseReleased(MouseEvent e) {
                    Graphics2D g = (Graphics2D) jPanel1.getGraphics();
                    for (Figuras[] c : conexiones) {
                        g.drawLine(c[0].getR().getX() + c[0].getR().getWidth() / 2, c[0].getR().getY() + c[0].getR().getHeight() / 2, c[1].getR().getX() + c[1].getR().getWidth() / 2, c[1].getR().getY() + c[1].getR().getHeight() / 2);
                    }
                    for (Figuras f : figuras) {
                        pintar(f.getColor(), f);
                    }
                }

                @Override
                public void mouseEntered(MouseEvent e) {
                    //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                }

                @Override
                public void mouseExited(MouseEvent e) {
                    //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                }
            });
            n.addMouseMotionListener(new MouseMotionListener() {
                @Override
                public void mouseDragged(MouseEvent e) {
                    Graphics2D g = (Graphics2D) jPanel1.getGraphics();
                    int dx = e.getX() - xo;
                    int dy = e.getY() - yo;
                    if (e.getComponent().contains(xo, yo)) {
                        ((JLabel) e.getComponent()).setLocation(e.getComponent().getX() + dx, e.getComponent().getY() + dy);
                    }
                    draw(g);
                }

                @Override
                public void mouseMoved(MouseEvent e) {
                    //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                }
            });
        }

        this.setBounds(this.getX(), this.getY(), this.getWidth() + 1, this.getHeight() + 1);
        this.setBounds(this.getX(), this.getY(), this.getWidth() - 1, this.getHeight() - 1);

    }//GEN-LAST:event_jPanel1MouseClicked
    public void draw(Graphics2D g) {
        for (Figuras[] c : conexiones) {
            g.drawLine(c[0].getR().getX() + c[0].getR().getWidth() / 2, c[0].getR().getY() + c[0].getR().getHeight() / 2, c[1].getR().getX() + c[1].getR().getWidth() / 2, c[1].getR().getY() + c[1].getR().getHeight() / 2);
            repaint();
            g.drawLine(c[0].getR().getX() + c[0].getR().getWidth() / 2, c[0].getR().getY() + c[0].getR().getHeight() / 2, c[1].getR().getX() + c[1].getR().getWidth() / 2, c[1].getR().getY() + c[1].getR().getHeight() / 2);
        }
    }

    public Figuras buscarfig(JLabel l) {
        for (Figuras f : figuras) {
            if (f.getR().equals(l)) {
                return f;
            }
        }
        return null;
    }
    private void jPanel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MousePressed

    }//GEN-LAST:event_jPanel1MousePressed
    public int color() {
        if (white.isSelected()) {
            return 1;
        }
        if (yellow.isSelected()) {
            return 2;
        }
        if (azul.isSelected()) {
            return 3;
        }
        if (cafe.isSelected()) {
            return 4;
        }
        if (morado.isSelected()) {
            return 5;
        }
        if (gris.isSelected()) {
            return 6;
        }
        if (verde.isSelected()) {
            return 7;
        }
        if (red.isSelected()) {
            return 8;
        }
        return 1;

    }
    private void jPanel1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseDragged


    }//GEN-LAST:event_jPanel1MouseDragged
    public void pintar(int d, Figuras f) {
        if (f instanceof Rectangulo) {
            f.getR().setIcon(new ImageIcon("pic/p" + d + ".png"));
        }
        if (f instanceof RoundRect) {
            f.getR().setIcon(new ImageIcon("pic/f" + d + ".png"));
        }
        if (f instanceof Salida) {
            f.getR().setIcon(new ImageIcon("pic/s" + d + ".png"));
        }
        if (f instanceof SubProceso) {
            f.getR().setIcon(new ImageIcon("pic/sp" + d + ".png"));
        }
        if (f instanceof Data) {
            f.getR().setIcon(new ImageIcon("pic/d" + d + ".png"));
        }
        if (f instanceof Decicion) {
            f.getR().setIcon(new ImageIcon("pic/i" + d + ".png"));
        }
    }
    private void jPanel1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel1MouseReleased
    public boolean val(Figuras f) {
        boolean a = true;
        if (f instanceof RoundRect && f.isPadre_val() == false) {
            a = false;
        }
        return a;
    }
    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        Figuras f = (Figuras) jComboBox1.getSelectedItem();
        if (val(figura_actual) && figura_actual.equals(f) == false) {
            Graphics g = jPanel1.getGraphics();
            Graphics2D g2 = (Graphics2D) g;
            g2.drawLine(figura_actual.getR().getX() + figura_actual.getR().getWidth() / 2, figura_actual.getR().getY() + figura_actual.getR().getHeight() / 2, f.getR().getX() + f.getR().getWidth() / 2, f.getR().getY() + f.getR().getHeight() / 2);
            Figuras[] e = new Figuras[2];
            figura_actual.getHijas().add(f);
            f.setPadres(figura_actual);
            e[0] = figura_actual;
            e[1] = (Figuras) jComboBox1.getSelectedItem();
            conexiones.add(e);
            for (Figuras l : figuras) {
                if (l.getR().equals(e[1].getR())) {
                    l.setPadres(e[0]);
                }
            }
            pintar(figura_actual.getColor(), figura_actual);
            pintar(f.getColor(), f);
            j_elegir.dispose();
        }
    }//GEN-LAST:event_jButton1MouseClicked
    public void genera(Figuras c) {
        if (c instanceof Rectangulo) {
            System.out.println(c.getTexto() + ";");
            figura_actual = c;
        }
        if (c instanceof RoundRect) {

        }
        if (c instanceof SubProceso) {
            System.out.println(c.getTexto() + ";");
            figura_actual = c;
        }
        if (c instanceof Data) {
            Scanner sc = new Scanner(c.getTexto());
            sc.useDelimiter(",");
            while (sc.hasNext()) {
                System.out.println(sc.next() + ";");
            }
            figura_actual = c;
        }
        if (c instanceof Salida) {
            Scanner sc = new Scanner(c.getTexto());
            Scanner r = new Scanner(sc.next());
            System.out.println("cout<<" + c.getTexto() + ";");
            figura_actual = c;
        }
        if (c instanceof Decicion) {

            System.out.println("if(" + c.getTexto() + "){");

            System.out.println("}else{");

            figura_actual = c;
        }
        figura_actual.setUso(true);
        for (Figuras s : figura_actual.getHijas()) {

            genera(s);
            s.setUso(true);

        }
    }
    boolean o = true;
    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        for (Figuras f : figuras) {
            for (int i = 0; i < f.getPadres().size(); i++) {
                if (f.getPadres().get(i) instanceof RoundRect) {
                    figura_actual = f;
                }
            }
        }
        System.out.println("#include <iostream>");
        System.out.println("using namespace std");
        System.out.println("int main(){");
        System.out.println(figura_actual);
        for (Figuras o : figura_actual.getHijas()) {
            genera(o);
        }
        System.out.println("}");
    }//GEN-LAST:event_jButton2MouseClicked

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        this.j_elegir.setModal(true);
        j_elegir.pack();
        j_elegir.setLocationRelativeTo(this);
        j_elegir.setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        DefaultComboBoxModel m = (DefaultComboBoxModel) jComboBox1.getModel();
        Graphics2D k = (Graphics2D) jPanel1.getGraphics();
        String g = JOptionPane.showInputDialog("Ingrese el texto que quiere ingresar");
        figura_actual.getR().setText(g);
        figura_actual.setTexto(g);
        figura_actual.getR().setHorizontalTextPosition(SwingConstants.CENTER);
        figura_actual.getR().setVerticalTextPosition(SwingConstants.CENTER);
        System.out.println(figura_actual.getR().getText());
        m.removeAllElements();
        for (Figuras f : figuras) {
            m.addElement(f);
        }
        draw(k);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void Color_cambioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Color_cambioActionPerformed
        int d = Integer.parseInt(JOptionPane.showInputDialog("1.White\n"
                + "2.Yellow\n"
                + "3.Blue\n"
                + "4.Brown\n"
                + "5.Purple\n"
                + "6.Gray\n"
                + "7.Green\n"
                + "8.Red"));
        figura_actual.setColor(d);
        pintar(d, figura_actual);
    }//GEN-LAST:event_Color_cambioActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        DefaultComboBoxModel m = (DefaultComboBoxModel) jComboBox1.getModel();
        m.removeAllElements();
        Graphics2D g = (Graphics2D) jPanel1.getGraphics();
        for (Figuras[] c : conexiones) {
            if (c[0].getR().equals(figura_actual.getR()) || c[1].getR().equals(figura_actual.getR())) {
                conexiones.remove(c);
                break;
            }
        }
        for (Figuras f : figuras) {
            if (figura_actual.getR().equals(f.getR())) {
                figuras.remove(f);
                break;
            }
        }
        for (Figuras c : figuras) {
            m.addElement(c);
        }
        jComboBox1.setModel(m);
        jPanel1.remove(figura_actual.getR());
        figura_actual = null;
        repaint();
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        String nombre = JOptionPane.showInputDialog("Ingrese el nombre");
        int integer = Integer.parseInt(JOptionPane.showInputDialog("Ingrese el estilo"));
        int tam = Integer.parseInt(JOptionPane.showInputDialog("ingrese el tamano"));
        figura_actual.getR().setFont(new Font(nombre, integer, tam));
        Color c = JColorChooser.showDialog(this, "Color/", Color.yellow);
        figura_actual.getR().setForeground(c);
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        JLabel comp = new JLabel();
        for (UML uml : umls) {
            if (Actual.getJp().equals(uml.getJp())) {
                comp.setBounds(0, uml.y, 150, 30);
                comp.setText(JOptionPane.showInputDialog("Ingrese el atributo"));
                comp.setVisible(true);
                uml.getAtributos().add(comp.getText());
                uml.y += 30;
                uml.setAtributos(comp.getText());
                uml.getJp().add(comp);
                uml.getJp().repaint();
                System.out.println(uml.getAtributos().get(0));
            }
        }
    }//GEN-LAST:event_jMenuItem6ActionPerformed
    UML Actual = new UML();
    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        JPanel x = new JPanel();
        x.setBounds(0, 0, 150, 150);
        x.setVisible(true);
        x.addMouseListener(new MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
                if (e.isMetaDown()) {
                    pp_menuo.show(e.getComponent(), e.getX(), e.getY());
                    Actual = new UML((JPanel) e.getComponent());
                }
            }

            @Override
            public void mousePressed(MouseEvent e) {
                Prex = e.getX();
                Prey = e.getY();
            }

            @Override
            public void mouseReleased(MouseEvent e) {
                Graphics2D g = (Graphics2D) jPanel2.getGraphics();
                for (UML[] c : Conexionesu) {
                    g.drawLine(c[0].getJp().getX() + c[0].getJp().getWidth() / 2, c[0].getJp().getY() + c[0].getJp().getHeight() / 2, c[1].getJp().getX() + c[1].getJp().getWidth() / 2, c[1].getJp().getY() + c[1].getJp().getHeight() / 2);

                }
            }

            @Override
            public void mouseEntered(MouseEvent e) {
                //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public void mouseExited(MouseEvent e) {
                //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }
        });
        x.addMouseMotionListener(new MouseMotionListener() {
            @Override
            public void mouseDragged(MouseEvent e) {
                Graphics2D g = (Graphics2D) jPanel2.getGraphics();
                int lx = e.getX() - Prex;
                int ly = e.getY() - Prey;
                if (e.getComponent().contains(Prex, Prey)) {
                    ((JPanel) e.getComponent()).setLocation(e.getComponent().getX() + lx, e.getComponent().getY() + ly);
                }
                for (UML[] c : Conexionesu) {
                    g.drawLine(c[0].getJp().getX() + c[0].getJp().getWidth() / 2, c[0].getJp().getY() + c[0].getJp().getHeight() / 2, c[1].getJp().getX() + c[1].getJp().getWidth() / 2, c[1].getJp().getY() + c[1].getJp().getHeight() / 2);
                    jPanel2.repaint();
                }
            }

            @Override
            public void mouseMoved(MouseEvent e) {
                //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }
        });
        x.setBorder(javax.swing.BorderFactory.createLineBorder(Color.BLACK));
        UML y = new UML(x);
        y.y = 0;
        umls.add(y);
        jPanel2.add(x);
        jPanel2.repaint();
    }//GEN-LAST:event_jButton3MouseClicked

    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
        this.setVisible(false);
        jFrame1.pack();
        jFrame1.setLocationRelativeTo(this);
        jFrame1.setVisible(true);
    }//GEN-LAST:event_jButton4MouseClicked

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        JLabel comp = new JLabel();
        for (UML uml : umls) {
            if (Actual.getJp().equals(uml.getJp())) {
                comp.setBounds(0, uml.y, 150, 30);
                comp.setForeground(Color.BLUE);
                comp.setText(JOptionPane.showInputDialog("Ingrese el atributo"));
                comp.setVisible(true);
                uml.setTitulo(comp.getText());
                uml.setTitulo(comp.getText());
                uml.getJp().add(comp);
                uml.getJp().repaint();
                uml.y += 30;
            }
        }
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        DefaultComboBoxModel model = (DefaultComboBoxModel) cb_uml.getModel();
        model.removeAllElements();
        for (UML uml : umls) {
            System.out.println(uml);
            model.addElement(uml);
        }
        cb_uml.setModel(model);
        jDialog1.setModal(true);
        jDialog1.pack();
        jDialog1.setLocationRelativeTo(this);
        jDialog1.setVisible(true);
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jButton5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseClicked
        UML f = (UML) cb_uml.getSelectedItem();
        Graphics g = jPanel2.getGraphics();
        Graphics2D g2 = (Graphics2D) g;
        g2.drawLine(Actual.getJp().getX() + Actual.getJp().getWidth() / 2, Actual.getJp().getY() + Actual.getJp().getHeight() / 2, f.getJp().getX() + f.getJp().getWidth() / 2, f.getJp().getY() + f.getJp().getHeight() / 2);
        UML[] e = new UML[2];
        e[0] = Actual;
        e[1] = f;
        Conexionesu.add(e);
        jDialog1.dispose();

    }//GEN-LAST:event_jButton5MouseClicked

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        Actual.getJp().setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Actual.setAbs(true);

    }//GEN-LAST:event_jMenuItem7ActionPerformed
    JFileChooser selector;

    public void crear_PDF() throws FileNotFoundException, IOException {
        try {
            Document pdf = new Document(PageSize.A4, 36, 36, 10, 10) {
            };
            String h = JOptionPane.showInputDialog("Ingrese el titulo");
            PdfWriter.getInstance(pdf, new FileOutputStream("./pdf/" + h + ".pdf"));
            pdf.open();
            pdf.add(getHeader("Buenos Dias"));
            Imagen();
            Image img = Image.getInstance(ruta);
            img.scaleAbsolute(150, 200);
            img.setAlignment(Element.ALIGN_CENTER);
            pdf.add(img);
            pdf.add(getInfo("Alex Ordonez"));
            pdf.add(getFoot("11711139"));
            pdf.addTitle(h);
            pdf.close();
            JOptionPane.showMessageDialog(null, "Documento PDF creado");
        } catch (Exception ex) {
        }

    }

    public Paragraph getFoot(String text) {
        Paragraph p = new Paragraph();
        Chunk c = new Chunk();
        c.append(text);
        p.add(c);
        return p;
    }

    public Paragraph getHeader(String text) {
        Paragraph p = new Paragraph();
        Chunk c = new Chunk();
        c.append(text);
        p.add(c);
        return p;
    }

    public Paragraph getInfo(String text) {
        Paragraph p = new Paragraph();
        Chunk c = new Chunk();
        c.append(text);
        p.add(c);
        return p;
    }

    public void Imagen() throws IOException {
        BufferedImage image = new BufferedImage(jPanel1.getWidth(), jPanel1.getHeight(), BufferedImage.TYPE_INT_RGB);
        Graphics2D g = image.createGraphics();
        jPanel1.paintAll(g);
        selector = new JFileChooser();
        String o = JOptionPane.showInputDialog("Ingrese el nombre del archivo");
        ruta = "./images/" + o + ".jpg";
        FileOutputStream f = new FileOutputStream(ruta);
        ImageIO.write(image, "jpg", f);
    }
    String ruta;

    public void j(Graphics2D g) {
    }

    private void jButton6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton6MouseClicked
        try {
            crear_PDF();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(proyect.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(proyect.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton6MouseClicked

    private void jButton7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton7MouseClicked
        try {
            Imagen();
        } catch (IOException ex) {
            Logger.getLogger(proyect.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton7MouseClicked

    private void jButton8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton8MouseClicked
        try {
            FileOutputStream fw = null;
            ObjectOutputStream bw = null;
            try {
                String p = JOptionPane.showInputDialog("Ingrese el nombre del archivo");
                fw = new FileOutputStream("./diagramas/" + p + ".jyb");
                bw = new ObjectOutputStream(fw);
                for (Figuras[] l : conexiones) {
                    bw.writeObject(l);
                }
                bw.flush();
            } catch (Exception e) {
            }
            bw.close();
            fw.close();
        } catch (IOException ex) {
            Logger.getLogger(proyect.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton8MouseClicked
    public void actualizar() {
        jPanel1.removeAll();
        for (Figuras u : figuras) {
            System.out.println("h");
            jPanel1.add(u.getR());
            jPanel1.repaint();
        }
    }
    ArrayList<Figuras> k = new ArrayList();
    private void jButton9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton9MouseClicked
        try {
            JFileChooser selec = new JFileChooser();
            FileNameExtensionFilter filter = new FileNameExtensionFilter("JOYBA", "jyb");
            selec.setFileFilter(filter);
            File archivo;
            int opt = selec.showOpenDialog(this);
            if (opt == JFileChooser.APPROVE_OPTION) {
                archivo = selec.getSelectedFile();
                if (archivo.exists()) {
                    Figuras[] temp;
                    FileInputStream entrada = new FileInputStream(archivo);
                    ObjectInputStream objeto = new ObjectInputStream(entrada);
                    try {
                        while ((temp = (Figuras[]) objeto.readObject()) != null) {
                            conexiones.add(temp);
                            boolean p = true;
                            boolean q = true;
                            for (Figuras f : figuras) {
                                System.out.println(f);
                                System.out.println(temp[0]);
                                if (temp[0].equals(f)) {
                                    p = false;
                                }
                            }
                            for (Figuras f : figuras) {
                                System.out.println(f);
                                System.out.println(temp[1]);
                                if (temp[1].equals(f)) {
                                    q = false;
                                }
                            }
                            if (p == true) {
                                temp[0].getR().addMouseListener(new MouseListener() {
                                    @Override
                                    public void mouseClicked(MouseEvent e) {
                                        if (e.isMetaDown()) {
                                            pp_menu.show(e.getComponent(), e.getX(), e.getY());
                                            figura_actual = buscarfig((JLabel) e.getComponent());
                                            repaint();
                                            Graphics2D g = (Graphics2D) jPanel1.getGraphics();
                                            draw(g);
                                        }
                                    }

                                    @Override
                                    public void mousePressed(MouseEvent e) {
                                        xo = e.getX();
                                        yo = e.getY();
                                        Graphics2D g = (Graphics2D) jPanel1.getGraphics();
                                        for (Figuras[] c : conexiones) {
                                            g.drawLine(c[0].getR().getX() + c[0].getR().getWidth() / 2, c[0].getR().getY() + c[0].getR().getHeight() / 2, c[1].getR().getX() + c[1].getR().getWidth() / 2, c[1].getR().getY() + c[1].getR().getHeight() / 2);
                                        }
                                    }

                                    @Override
                                    public void mouseReleased(MouseEvent e) {
                                        Graphics2D g = (Graphics2D) jPanel1.getGraphics();
                                        for (Figuras[] c : conexiones) {
                                            g.drawLine(c[0].getR().getX() + c[0].getR().getWidth() / 2, c[0].getR().getY() + c[0].getR().getHeight() / 2, c[1].getR().getX() + c[1].getR().getWidth() / 2, c[1].getR().getY() + c[1].getR().getHeight() / 2);
                                        }
                                        for (Figuras f : figuras) {
                                            pintar(f.getColor(), f);
                                        }
                                    }

                                    @Override
                                    public void mouseEntered(MouseEvent e) {
                                        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                                    }

                                    @Override
                                    public void mouseExited(MouseEvent e) {
                                        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                                    }
                                });
                                temp[0].getR().addMouseMotionListener(new MouseMotionListener() {
                                    @Override
                                    public void mouseDragged(MouseEvent e) {
                                        Graphics2D g = (Graphics2D) jPanel1.getGraphics();
                                        int dx = e.getX() - xo;
                                        int dy = e.getY() - yo;
                                        if (e.getComponent().contains(xo, yo)) {
                                            ((JLabel) e.getComponent()).setLocation(e.getComponent().getX() + dx, e.getComponent().getY() + dy);
                                        }
                                        draw(g);
                                    }

                                    @Override
                                    public void mouseMoved(MouseEvent e) {
                                        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                                    }
                                });
                                figuras.add(temp[0]);
                            }
                            if (q == true) {
                                temp[1].getR().addMouseListener(new MouseListener() {
                                    @Override
                                    public void mouseClicked(MouseEvent e) {
                                        if (e.isMetaDown()) {
                                            pp_menu.show(e.getComponent(), e.getX(), e.getY());
                                            figura_actual = buscarfig((JLabel) e.getComponent());
                                            repaint();
                                            Graphics2D g = (Graphics2D) jPanel1.getGraphics();
                                            draw(g);
                                        }
                                    }

                                    @Override
                                    public void mousePressed(MouseEvent e) {
                                        xo = e.getX();
                                        yo = e.getY();
                                        Graphics2D g = (Graphics2D) jPanel1.getGraphics();
                                        for (Figuras[] c : conexiones) {
                                            g.drawLine(c[0].getR().getX() + c[0].getR().getWidth() / 2, c[0].getR().getY() + c[0].getR().getHeight() / 2, c[1].getR().getX() + c[1].getR().getWidth() / 2, c[1].getR().getY() + c[1].getR().getHeight() / 2);
                                        }
                                    }

                                    @Override
                                    public void mouseReleased(MouseEvent e) {
                                        Graphics2D g = (Graphics2D) jPanel1.getGraphics();
                                        for (Figuras[] c : conexiones) {
                                            g.drawLine(c[0].getR().getX() + c[0].getR().getWidth() / 2, c[0].getR().getY() + c[0].getR().getHeight() / 2, c[1].getR().getX() + c[1].getR().getWidth() / 2, c[1].getR().getY() + c[1].getR().getHeight() / 2);
                                        }
                                        for (Figuras f : figuras) {
                                            pintar(f.getColor(), f);
                                        }
                                    }

                                    @Override
                                    public void mouseEntered(MouseEvent e) {
                                        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                                    }

                                    @Override
                                    public void mouseExited(MouseEvent e) {
                                        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                                    }
                                });
                                temp[1].getR().addMouseMotionListener(new MouseMotionListener() {
                                    @Override
                                    public void mouseDragged(MouseEvent e) {
                                        Graphics2D g = (Graphics2D) jPanel1.getGraphics();
                                        int dx = e.getX() - xo;
                                        int dy = e.getY() - yo;
                                        if (e.getComponent().contains(xo, yo)) {
                                            ((JLabel) e.getComponent()).setLocation(e.getComponent().getX() + dx, e.getComponent().getY() + dy);
                                        }
                                        draw(g);
                                    }

                                    @Override
                                    public void mouseMoved(MouseEvent e) {
                                        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                                    }
                                });
                                figuras.add(temp[1]);
                            }
                            System.out.println("y");
                        }
                    } catch (EOFException e) {
                        //encontro el final del archivo
                    }
                    objeto.close();
                    entrada.close();
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        System.out.println("t");
        for (Figuras f : figuras) {
            System.out.println(f);
        }
        actualizar();

    }//GEN-LAST:event_jButton9MouseClicked

    private void jButton10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton10MouseClicked
//        PrintService printService = PrintServiceLookup.lookupDefaultPrintService();
//        DocFlavor flavor = DocFlavor.BYTE_ARRAY.AUTOSENSE;
//        DocPrintJob docPrintJob = printService.createPrintJob();
//        BufferedImage image = new BufferedImage(jPanel1.getWidth(), jPanel1.getHeight(), BufferedImage.TYPE_INT_RGB);
//        Graphics2D g = image.createGraphics();
//        jPanel1.paintAll(g);
//        Doc doc = new SimpleDoc(g, flavor, null);
//        try {
//            docPrintJob.print(doc, null);
//        } catch (PrintException e) {
//            // TODO Auto-generated catch block
//            e.printStackTrace();
//        }
    }//GEN-LAST:event_jButton10MouseClicked

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton11MouseClicked
        int x = 0;
        ArrayList<JTextArea> ja = new ArrayList();
        for (UML u : umls) {
            JTextArea ta = new JTextArea();
            String d = "";
            ArrayList<String> w = new ArrayList();
            ArrayList<String> s = new ArrayList();
            for (String st : u.getAtributos()) {
                Scanner sc = new Scanner(st);
                w.add(sc.next());
                if (sc.hasNext()) {
                    s.add(sc.next());
                }
            }
            if (u.getPadre() == null) {
                if (u.isAbs()) {
                    d += "package this;\n\n";
                    d += "public abstract class " + u.getTitulo() + "{\n\n";
                    for (String f : u.getAtributos()) {
                        d += "\t" + f + ";" + "\n";
                    }
                    d += "\tpublic " + u.getTitulo() + "(){\n\t}\n";
                    d += "\tpublic " + u.getTitulo() + "(";
                    for (int i = 0; i < u.getAtributos().size(); i++) {
                        if (i == u.getAtributos().size() - 1) {
                            d += u.getAtributos().get(i) + "){\n";
                        } else {
                            d += u.getAtributos().get(i) + ",";
                        }
                    }
                    for (String st : s) {
                        d += "\t\tthis." + st + "=" + st + "\n";
                    }
                    d += "\t}\n";
                    for (int y = 0; y < s.size() - 1; y++) {
                        d += "\tpublic void set" + s.get(y) + "(" + u.getAtributos().get(y) + "){\n";
                        d += "\t\tthis." + s.get(y) + "=" + s.get(y) + "\n\t\t}\n";
                        d += "\tpublic " + w.get(y) + " get" + s.get(y) + "(){\n";
                        d += "\t\treturn " + s.get(y) + ";\n\t}\n}";
                    }
                } else {
                    d += "package this;\n\n";
                    d += "public class " + u.getTitulo() + "{\n\n";
                    for (String f : u.getAtributos()) {
                        d += "\t" + f + ";" + "\n";
                    }
                    d += "\tpublic " + u.getTitulo() + "(){\n\t}\n";
                    d += "\tpublic " + u.getTitulo() + "(";
                    for (int i = 0; i < u.getAtributos().size(); i++) {
                        if (i == u.getAtributos().size() - 1) {
                            d += u.getAtributos().get(i) + "){\n";
                        } else {
                            d += u.getAtributos().get(i) + ",";
                        }
                    }
                    for (String st : s) {
                        d += "\t\tthis." + st + "=" + st + "\n";
                    }
                    d += "\t}\n";
                    for (int y = 0; y < s.size() - 1; y++) {
                        d += "\tpublic void set" + s.get(y) + "(" + u.getAtributos().get(y) + "){\n";
                        d += "\t\tthis." + s.get(y) + "=" + s.get(y) + "\n\t\t}\n";
                        d += "\tpublic " + w.get(y) + " get" + s.get(y) + "(){\n";
                        d += "\t\treturn " + s.get(y) + ";\n\t}\n}";
                    }
                }
            } else {
                if (u.isAbs()) {
                    d += "package this;\n\n";
                    d += "public abstract class " + u.getTitulo() + " extends " + u.getPadre().getTitulo() + "{\n\n";
                    for (String f : u.getAtributos()) {
                        d += "\t" + f + ";" + "\n";
                    }
                    d += "\tpublic " + u.getTitulo() + "(){\n\t}\n";
                    d += "\tpublic " + u.getTitulo() + "(";
                    for (int i = 0; i < u.getAtributos().size(); i++) {
                        if (i == u.getAtributos().size() - 1) {
                            d += u.getAtributos().get(i) + "){\n";
                        } else {
                            d += u.getAtributos().get(i) + ",";
                        }
                    }
                    for (String st : s) {
                        d += "\t\tthis." + st + "=" + st + "\n";
                    }
                    d += "\t}\n";
                    for (int y = 0; y < s.size() - 1; y++) {
                        d += "\tpublic void set" + s.get(y) + "(" + u.getAtributos().get(y) + "){\n";
                        d += "\t\tthis." + s.get(y) + "=" + s.get(y) + "\n\t\t}\n";
                        d += "\t]public " + w.get(y) + " get" + s.get(y) + "(){\n";
                        d += "\t\treturn " + s.get(y) + ";\n\t}\n}";
                    }
                } else {
                    d += "package this;\n\n";
                    d += "public class " + u.getTitulo() + " extends " + u.getPadre().getTitulo() + "{\n\n";
                    for (String f : u.getAtributos()) {
                        d += "\t" + f + ";" + "\n";
                    }
                    d += "\tpublic " + u.getTitulo() + "(){\n\t}\n";
                    d += "\tpublic " + u.getTitulo() + "(";
                    for (int i = 0; i < u.getAtributos().size(); i++) {
                        if (i == u.getAtributos().size() - 1) {
                            d += u.getAtributos().get(i) + "){\n";
                        } else {
                            d += u.getAtributos().get(i) + ",";
                        }
                    }
                    d += "\n";
                    for (String st : s) {
                        d += "\t\tthis." + st + "=" + st + "\n";
                    }
                    d += "\t}\n";
                    for (int y = 0; y < s.size() - 1; y++) {
                        d += "\tpublic void set" + s.get(y) + "(" + u.getAtributos().get(y) + "){\n";
                        d += "\t\tthis." + s.get(y) + "=" + s.get(y) + "\n\t\t}\n";
                        d += "\tpublic " + w.get(y) + " get" + s.get(y) + "(){\n";
                        d += "\t\treturn " + s.get(y) + ";\n\t}\n}";
                    }
                }
            }
            ta.setText(d);
            ta.setBounds(x, 0, 300, 400);
            ta.setVisible(true);
            ja.add(ta);
            x += 50;
        }
        for (JTextArea jt : ja) {
            System.out.println(jt.getText());
            jDialog2.add(jt);
        }
        jDialog2.setModal(true);
        jDialog2.pack();
        jDialog2.setLocationRelativeTo(this);
        jDialog2.setVisible(true);

    }//GEN-LAST:event_jButton11MouseClicked

    private void jButton12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton12MouseClicked
        this.pack();
        jFrame1.setVisible(false);
        this.setVisible(true);
    }//GEN-LAST:event_jButton12MouseClicked
    int Prex;
    int Prey;

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(proyect.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(proyect.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(proyect.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(proyect.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new proyect().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Color_cambio;
    private javax.swing.JToggleButton Decicion;
    private javax.swing.JToggleButton Inicio;
    private javax.swing.JToggleButton Proceso;
    private javax.swing.JToggleButton Sub;
    private javax.swing.JToggleButton azul;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JToggleButton cafe;
    private javax.swing.JComboBox<String> cb_uml;
    private javax.swing.JToggleButton defaul;
    private javax.swing.JToggleButton gris;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JDialog jDialog2;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JToolBar jToolBar2;
    private javax.swing.JToolBar jToolBar3;
    private javax.swing.JDialog j_elegir;
    private javax.swing.JToggleButton lectura;
    private javax.swing.JToggleButton morado;
    private javax.swing.JPopupMenu pp_menu;
    private javax.swing.JPopupMenu pp_menuo;
    private javax.swing.JToggleButton red;
    private javax.swing.JToggleButton salida;
    private javax.swing.JToggleButton verde;
    private javax.swing.JToggleButton white;
    private javax.swing.JToggleButton yellow;
    // End of variables declaration//GEN-END:variables
    int band = 0;
    int xo;
    int yo;
    int x;
    int y;
    int fx;
    int fy;
    ArrayList<UML> umls = new ArrayList();
    ArrayList<UML[]> Conexionesu = new ArrayList();
    Point drawStart, drawEnd;
    Color c;
    ArrayList<Figuras[]> conexiones = new ArrayList();
    boolean t = true;
    ArrayList<Figuras> figuras = new ArrayList();
    Figuras figura_actual;

}
